name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run lint
      run: npm run lint
    
    - name: Run type check
      run: npm run typecheck
    
    - name: Run unit tests
      run: npm run test:coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
  
  e2e-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
    
    - name: Build application
      run: npm run build
    
    - name: Run E2E tests
      run: |
        # First attempt - may fail on visual regression baseline creation
        npm run test:e2e || {
          echo "E2E tests failed, checking if it's just visual regression baselines..."
          
          # Check if failure is due to missing visual regression baselines
          if [ -d "test-results" ] && find test-results -name "*actual.png" -type f | grep -q .; then
            echo "Visual regression baselines created, retrying tests..."
            npm run test:e2e
          else
            echo "E2E tests failed for other reasons"
            exit 1
          fi
        }
    
    - name: Commit visual regression baselines
      if: success()
      run: |
        # Check if any new visual regression baselines were created
        if [ -d "e2e" ] && find e2e -name "*-snapshots" -type d | grep -q .; then
          echo "Visual regression baselines were created, committing them..."
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add e2e/**/*-snapshots/
          git commit -m "Add visual regression baselines from CI" || echo "No new baselines to commit"
          git push || echo "Push failed or no changes to push"
        else
          echo "No visual regression baselines to commit"
        fi
    
    - name: Upload E2E test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

  security-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit
    
    - name: Run security tests
      run: npm run test:security

  performance-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run performance tests
      run: npm run test:performance
    
    - name: Build and check bundle size
      run: |
        npm run build
        echo "Build outputs:"
        ls -lah dist/

  build-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build library
      run: npm run build
    
    - name: Check build outputs
      run: |
        test -f dist/mmeditor.umd.js
        test -f dist/mmeditor.es.js
        test -f dist/index.d.ts
        test -f dist/style.css